#!/usr/bin/python
import sys
import argparse
import afal

parser = argparse.ArgumentParser("Create a debt from a character to another character or a party")
parser.add_argument("--verbose", "-v", help="print progress messages", action='store_true', default=False)
parser.add_argument("--item", '-i', help="an item associated with the debt")
parser.add_argument("date", help="When the transaction takes place")
parser.add_argument("character", help="Who is becoming the debtor")
parser.add_argument("party", help="Who is becoming the debtee")
parser.add_argument("debt", help="The amount being borrowed")
args = parser.parse_args()

date = afal.str_to_date(args.date)
debt_cp = afal.gp_cp_to_cp(float(args.debt), 0)
try :
    char_id = afal.get_char_id(args.character)
    char_name = args.character
except :
    char_id = int(args.character)
    char_name = afal.get_char_name(char_id)

try :
    party_id = afal.get_party_id(args.party)
    party_name = args.party

except :
    try :
        party_id = 0
        lender_id = afal.get_char_id(args.party)
        lender_name = args.party
    except :
        try :
            party_name = afal.get_party_name(args.party)
            party_id = args.party
        except :
            try :
                lender_name = afal.get_char_name(args.party)
                lender_id = args.party
            except :
                print "Unknown character or party", args.party
                sys.exit(1)

shares = 0.0
if party_id > 0 :
    lender_name = party_name
    lender_id = party_id
    lenders = afal.get_party_members(party_id)
    for i in lenders :
        shares += float(i[1])
else :
    lenders = [ [lender_id, 1 ] ]
    shares = 1;

if args.item is not None:
    item_name = args.item
    item_id = afal.get_item_id(item_name)
    itext = ' for ' + item_name
else:
    item_id = None
    item_name = None
    itext = ''
if len(lenders) > 1:
    journal_id = afal.journal(date, lender_id, char_id, debt_cp,
 lender_name + " lent " + afal.str_cp(debt_cp) + " to "
 + char_name + itext )
else:
    journal_id = None
for i in lenders :
    lid = i[0]
    lshare = float(i[1])
    lname = afal.get_char_name(lid)
    if lshare > 0 :
        sh_cp = int(lshare * debt_cp / shares)
        afal.insert_debt({'date':date, 'from_id':char_id, 'to_id':lid,
'amount':sh_cp, 'share':lshare, 'item_id':item_id, 'from_name':char_name,
 'to_name':lname, 'item_name':item_name, 'part_of':journal_id})

afal.fini()
