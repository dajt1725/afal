#!/usr/bin/python
import argparse
import afal


parser = argparse.ArgumentParser("Have a character buy an item")
parser.add_argument("--virtual", "-V", help="don't update characters' cash or debts",action='store_true', default=False)
parser.add_argument("--debt", "-d", type=float, help="debt used to buy item", default=0.0)
parser.add_argument("--cash", "-c", type=float, help="cash used to buy item", default=0.0)
parser.add_argument("--verbose", "-v", help="print progress messages", action='store_true', default=False)
parser.add_argument("date", help="When the transaction takes place")
parser.add_argument("item", help="The item being purchased")
parser.add_argument("character", help="The character purchasing the item")
args = parser.parse_args()

cash = afal.gp_cp_to_cp(float(args.cash), 0)
debt = afal.gp_cp_to_cp(float(args.debt), 0)
try :
    item_id = int ( args.item )
    item_name = afal.get_item_name(item_id)
except :
    item_id = afal.get_item_id(args.item)
    item_name = args.item

try :
    char_id = afal.get_char_id(args.character)
    char_name = args.character
except :
    char_id = int(args.character)
    char_name = afal.get_char_name(char_id)

date = afal.str_to_date(args.date)

item_name = afal.get_item_name(item_id)
seller_id = afal.get_item_owner(item_id)
if seller_id is None :
    seller_id = afal.party
if seller_id == afal.party:
    party_id = afal.get_item_acquired_by(item_id)
    seller_name = 'Party ' + afal.get_party_name(party_id)
    sellers = afal.get_party_members(party_id)
    shares = 0
    for i in sellers:
        shares +=i[1]
else:
    seller_name = afal.get_char_name(seller_id) if seller_id > afal.party else 'Someone'
    sellers = [[seller_id, 1]]
    shares = 1

if debt > 0 and cash > 0:
    verb = " sold "
    t_for = " for " + afal.str_cp(cash) + " cash and " + afal.str_cp(debt) + " debt"
elif debt > 0:
    verb = " sold "
    t_for = " for " + afal.str_cp(debt) + " debt"
elif cash > 0:
    verb = " sold "
    t_for = " for " + afal.str_cp(cash) + " cash"
else:
    verb = " gave "
    t_for = ''
text = seller_name + verb + item_name + " to " + char_name + t_for

afal.change_item_owner(item_id, char_id, cash + debt, date)
journal_id = afal.journal(date, seller_id, char_id, cash + debt, text)
if args.verbose:
    print char_name, "bought", item_name

if not args.virtual:
    cash_cp = cash
    debt_cp = debt
    for i in sellers:
        sid = i[0]
        sshare = float(i[1])
        sname = afal.get_char_name(sid)
        if sshare > 0 :
            if cash_cp > 0 :
                sh_cp = afal.divide_cp(sshare * cash_cp, shares)
                if args.verbose:
                    print char_name, "paid", afal.str_cp(sh_cp), "to", sname
                afal.chars_move_cash({'date':date, 'from_id':char_id,
 'to_id':sid, 'amount':sh_cp, 'from_name':char_name, 'to_name':sname,
 'item_id':item_id, 'item_name':item_name, 'part_of':journal_id})
                cash_cp -= sh_cp
            if debt_cp > 0 :
                sh_cp = afal.divide_cp(sshare * debt_cp, shares)
                if args.verbose :
                    print char_name, "owed", afal.str_cp(sh_cp), "to", sname
                afal.insert_debt({'date':date, 'from_id':char_id, 'to_id':sid,
 'amount':sh_cp, 'share':sshare,'item_id':item_id, 'from_name':char_name,
 'to_name':sname, 'item_name':item_name, 'part_of':journal_id})
                debt_cp -= sh_cp
            shares -= sshare

afal.fini()
