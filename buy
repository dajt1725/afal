#!/usr/bin/python
import argparse
import afal


parser = argparse.ArgumentParser("Have a character buy an item")
parser.add_argument("--virtual", "-V", help="don't update characters' cash or debts",action='store_true', default=False)
parser.add_argument("--debt", "-d", type=float, help="debt used to buy item", default=0.0)
parser.add_argument("--cash", "-c", type=float, help="cash used to buy item", default=0.0)
parser.add_argument("--verbose", "-v", help="print progress messages", action='store_true', default=False)
parser.add_argument("date", help="When the transaction takes place")
parser.add_argument("item", help="The item being purchased")
parser.add_argument("character", help="The character purchasing the item")
args = parser.parse_args()

cash = afal.gp_cp_to_cp(float(args.cash), 0)
debt = afal.gp_cp_to_cp(float(args.debt), 0)
try :
    item_id = int ( args.item )
    item_name = afal.get_item_name(item_id)
except :
    item_id = afal.get_item_id(args.item)
    item_name = args.item

try :
    char_id = afal.get_char_id(args.character)
    char_name = args.character
except :
    char_id = int(args.character)
    char_name = afal.get_char_name(char_id)

seller_id = afal.get_item_owner(item_id)
if seller_id == None :
    seller_id = 0
party_id = afal.change_item_owner(item_id, args.date, char_id, cash+debt )
shares = 0.0
if seller_id == -1 :
    seller_name = "Someone"
    sellers = [ [seller_id, 1 ] ]
    shares = 1;
elif seller_id == 0 :
    seller_name = afal.get_party_name(party_id)
    sellers = afal.get_party_members(party_id)
    for i in sellers :
        shares += float(i[1])
else :
    seller_name = afal.get_char_name(seller_id)
    sellers = [ [seller_id, 1 ] ]
    shares = 1;
if debt > 0 :
    if cash > 0 :
        journal_id = afal.journal(args.date, seller_id, char_id, cash + debt,
 seller_name + " sold "+ item_name + " to " + char_name + " for "
 + afal.str_cp(cash) + " cash and " + afal.str_cp(debt) + " debt"  )
    else :
        journal_id = afal.journal(args.date, seller_id, char_id, debt,
 seller_name + " sold " + item_name + " to "
 + char_name + " for " + afal.str_cp(debt) + " debt" )
elif cash > 0 :
    journal_id = afal.journal(args.date, seller_id, char_id, cash,
 seller_name + " sold "+ item_name + " to " +
 char_name + " for " + afal.str_cp(cash) + " cash" )
else :
    journal_id = afal.journal(args.date, seller_id, char_id, cash,
 seller_name + " gave "+ item_name + " to " + char_name )


if not args.virtual :
    cash_cp = cash
    debt_cp = debt
    for i in sellers :
        sid = i[0]
        sshare = float(i[1])
        sname = afal.get_char_name(sid)
        if sshare > 0 :
            if cash_cp > 0 :
                sh_cp = afal.divide_cp(sshare * cash_cp, shares)
                if args.verbose :
                    print char_name, "paid", afal.str_cp(sh_cp), "to", sname
                afal.char_add_cash(sid, sh_cp)
                afal.journal(args.date, sid, char_id, sh_cp,
char_name + " gave " + afal.str_cp(sh_cp) + " to " + sname, journal_id)
                cash_cp -= sh_cp
            if debt_cp > 0 :
                sh_cp = afal.divide_cp(sshare * debt_cp, shares)
                if args.verbose :
                    print char_name, "owed", afal.str_cp(sh_cp), "to", sname
                afal.insert_debt(args.date, char_id, sid, sh_cp, share=sshare, item_id=item_id)
                afal.journal(args.date, sid, char_id, sh_cp,
char_name + " owed " + afal.str_cp(sh_cp) + " to " + sname, journal_id)
                debt_cp -= sh_cp
            shares -= sshare

afal.fini()
